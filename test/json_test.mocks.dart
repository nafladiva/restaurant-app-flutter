// Mocks generated by Mockito 5.0.15 from annotations
// in restail/test/json_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:http/http.dart' as _i5;
import 'package:mockito/mockito.dart' as _i1;
import 'package:restail/data/api/api_service.dart' as _i3;
import 'package:restail/data/model/restaurant.dart' as _i2;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeRestaurantResult_0 extends _i1.Fake implements _i2.RestaurantResult {
}

class _FakeRestaurantSearch_1 extends _i1.Fake implements _i2.RestaurantSearch {
}

class _FakeRestaurantResultDetail_2 extends _i1.Fake
    implements _i2.RestaurantResultDetail {}

/// A class which mocks [ApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiService extends _i1.Mock implements _i3.ApiService {
  MockApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.RestaurantResult> getRestaurantList() =>
      (super.noSuchMethod(Invocation.method(#getRestaurantList, []),
              returnValue:
                  Future<_i2.RestaurantResult>.value(_FakeRestaurantResult_0()))
          as _i4.Future<_i2.RestaurantResult>);
  @override
  _i4.Future<_i2.RestaurantResult> getList(_i5.Client? client) =>
      (super.noSuchMethod(Invocation.method(#getList, [client]),
              returnValue:
                  Future<_i2.RestaurantResult>.value(_FakeRestaurantResult_0()))
          as _i4.Future<_i2.RestaurantResult>);
  @override
  _i4.Future<_i2.RestaurantSearch> search(String? query) =>
      (super.noSuchMethod(Invocation.method(#search, [query]),
              returnValue:
                  Future<_i2.RestaurantSearch>.value(_FakeRestaurantSearch_1()))
          as _i4.Future<_i2.RestaurantSearch>);
  @override
  _i4.Future<_i2.RestaurantResultDetail> getDetail(String? restaurantId) =>
      (super.noSuchMethod(Invocation.method(#getDetail, [restaurantId]),
              returnValue: Future<_i2.RestaurantResultDetail>.value(
                  _FakeRestaurantResultDetail_2()))
          as _i4.Future<_i2.RestaurantResultDetail>);
  @override
  String toString() => super.toString();
}
